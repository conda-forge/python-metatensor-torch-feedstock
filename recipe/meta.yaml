{% set name = "metatensor-torch" %}
{% set version = "0.8.0" %}

package:
  name: python-{{ name|lower }}
  version: {{ version }}

source:
  url: https://pypi.org/packages/source/{{ name[0] }}/{{ name }}/metatensor_torch-{{ version }}.tar.gz
  sha256: 240ea8c37328f6bb61ec9f3e482131f0875c73166a0e349a8dd8b85204c58bd7

build:
  number: 0

outputs:
  - name: python-{{ name|lower }}
    version: {{ version }}

    build:
      ignore_run_exports:
        - libtorch
        - pytorch
      script: python -m pip install . -vv --no-deps --no-build-isolation
      script_env:
        # Don't build metatensor-torch, but use the already compiled `libmetatensor-torch`
        # package
        - METATENSOR_TORCH_PYTHON_USE_EXTERNAL_LIB='ON'

    requirements:
      build:
        - python                                 # [build_platform != target_platform]
        - pytorch                                # [build_platform != target_platform]
        - cross-python_{{ target_platform }}     # [build_platform != target_platform]
        # Nothing will be built but we need a correct env to make pip happy
        - {{ compiler('cxx') }}
        - {{ stdlib("c") }}
        - cmake
        - make
      host:
        - python
        - setuptools >=77
        - packaging >=23
        # We build against the CPU version of torch to not have to deal with CUDA compilers
        # (torch's CMake targets tries to find CUDA compilers even when there is no CUDA
        # code to build). This does not impact the `run` dependency, since torch's
        # `run_exports` are variant agnostic
        - libtorch * cpu*
        - pytorch
        - pip
        - libmetatensor-torch {{ version }}
        - python-metatensor-core >=0.1.13,<0.2.0
      run:
        - python
        - pytorch
        - libmetatensor-torch {{ version }}
        - python-metatensor-core >=0.1.13,<0.2.0
        - python-vesin

    test:
      imports:
        - metatensor
      commands:
        - pip check
      requires:
        - pip

  # This produces a `metatensor-torch` meta-package, only containing
  # dependencies on sub-packages
  - name: {{ name|lower }}
    version: {{ version }}
    build:
      noarch: generic

    requirements:
      run:
        - libmetatensor-torch {{ version }}
        - python-metatensor-torch {{ version }}
        - python-metatensor-operations >=0.3.3,<0.4.0
        - python-metatensor-learn >=0.3.2,<0.4.0

    test:
      imports:
        - metatensor
      commands:
        - pip check
      requires:
        - pip


about:
  home: https://github.com/metatensor/metatensor
  summary: Python bindings for metatensor-torch
  license: BSD-3-Clause
  license_family: BSD
  license_file: LICENSE
  doc_url: docs.metatensor.org

extra:
  recipe-maintainers:
    - HaoZeke
    - PicoCentauri
    - Luthaf
